# docker-compose.yml

services:
  app:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shop-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shopdb
      - DATABASE_USERNAME=shop_user
      - DATABASE_PASSWORD=shop_password
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shop-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:16-alpine
    container_name: shop-postgres
    environment:
      - POSTGRES_DB=shopdb
      - POSTGRES_USER=shop_user
      - POSTGRES_PASSWORD=shop_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/changelog:/docker-entrypoint-initdb.d/changelog:ro
    networks:
      - shop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop_user -d shopdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: shop-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  shop-network:
    driver: bridge

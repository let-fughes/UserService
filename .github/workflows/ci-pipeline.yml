name: UserService CI Pipeline

on:
  push:
    branches: [ main, master, UserService ]
  pull_request:
    branches: [ main, master, UserService ]

env:
  IMAGE_NAME: user-service-app
  REGISTRY: ghcr.io

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean compile

    - name: Run tests
      run: mvn -B test

    - name: SonarCloud Analysis
      run: |
        mvn -B sonar:sonar \
          -Dsonar.projectKey=let-fughes_UserService \
          -Dsonar.organization=let-fughes \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Package application (skip Spring Boot repackage)
      run: mvn -B package -DskipTests -Dspring-boot.repackage.skip=true

    - name: Check generated JAR files
      run: ls -la target/

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-app
        path: target/*.jar
        retention-days: 1

  build-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: java-app
        path: target/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t user-service-app:latest .
        echo "Docker image built successfully"
        docker images user-service-app
